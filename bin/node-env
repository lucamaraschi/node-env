#!/usr/bin/env node
'use strict';

var path = require('path');
var cmdln = require('cmdln');
var util = require('util');
var exec = require('child_process').exec;
var bunyan = require('bunyan');
var log = bunyan.createLogger({ name: 'my-node' });
//var coremonLib = require('../lib');

var dockerfilePath = path.resolve('..', 'resources', 'Dockerfile');
//var CURRENT_DIR = process.cwd();

function Coremon() {
  cmdln.Cmdln.call(this, {
    name: 'node-env',
    desc: 'Hi, I am Charles, your personal Node.js Core Butler. How can I help you?'
  });
}

util.inherits(Coremon, cmdln.Cmdln);

Coremon.prototype.do_up = function(subcmd, opts, args, cb) {
  if (opts.help) {
    this.do_help('help', {}, [subcmd], cb);
  }

  var cmds = [
    util.format('docker build %s', dockerfilePath),
    'docker run -d'
  ];

  cmds.forEach(function(command) {
    console.log('executing command');
    exec(command, function(error, stdout, stderr) {
      process.stdout.pipe(stdout);
      process.stderr.pipe(stderr);

      if (error) {
        log.error(error);
      }
    });
  });

  cb();
};

Coremon.prototype.do_up.options = [
    {
        names: ['help', 'h'],
        type: 'bool',
        help: 'Show this help.'
    },
    {
        names: ['core-path', 'cp'],
        helpArg: 'PATH',
        type: 'string',
        default: '.',
        help: 'The path to the node-core source code location'
    }
];

Coremon.prototype.do_up.help = (
    'Crush your enemies.\n'
    + '\n'
    + 'Usage:\n'
    + '     {{name}} crush [OPTIONS] [ENEMIES...]\n'
    + '\n'
    + '{{options}}'
);

cmdln.main(new Coremon());
